{"ast":null,"code":"var _jsxFileName = \"/home/praneethkumar/hackathon/qpm/src/teacherModule/pages/Patterns.js\";\nimport { Box, Button, Card, CardContent, Typography, Grid } from '@mui/material';\nimport { Plus, FileSpreadsheet } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Patterns() {\n  const patterns = [{\n    id: 1,\n    name: 'Mid-Term Pattern',\n    subject: 'Mathematics',\n    duration: '1.5 hours',\n    totalMarks: 50\n  }, {\n    id: 2,\n    name: 'Final Exam Pattern',\n    subject: 'Physics',\n    duration: '3 hours',\n    totalMarks: 100\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          children: \"Paper Patterns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 48\n          }, this),\n          children: \"Create Pattern\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: patterns.map(pattern => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  color: 'primary.main',\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(FileSpreadsheet, {\n                  size: 32\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: pattern.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Subject: \", pattern.subject]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Duration: \", pattern.duration]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                paragraph: true,\n                children: [\"Total Marks: \", pattern.totalMarks]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                fullWidth: true,\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, pattern.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), patterns.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        align: \"center\",\n        children: \"No patterns found. Create your first pattern to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = Patterns;\nvar _c;\n$RefreshReg$(_c, \"Patterns\");","map":{"version":3,"names":["Box","Button","Card","CardContent","Typography","Grid","Plus","FileSpreadsheet","jsxDEV","_jsxDEV","Fragment","_Fragment","Patterns","patterns","id","name","subject","duration","totalMarks","children","sx","display","justifyContent","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","container","spacing","map","pattern","item","xs","sm","md","color","size","gutterBottom","paragraph","fullWidth","length","align","_c","$RefreshReg$"],"sources":["/home/praneethkumar/hackathon/qpm/src/teacherModule/pages/Patterns.js"],"sourcesContent":["import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n} from '@mui/material';\nimport { Plus, FileSpreadsheet } from 'lucide-react';\n\nexport default function Patterns() {\n  const patterns = [\n    {\n      id: 1,\n      name: 'Mid-Term Pattern',\n      subject: 'Mathematics',\n      duration: '1.5 hours',\n      totalMarks: 50,\n    },\n    {\n      id: 2,\n      name: 'Final Exam Pattern',\n      subject: 'Physics',\n      duration: '3 hours',\n      totalMarks: 100,\n    },\n  ];\n\n  return (\n    <>\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 4 }}>\n        <Typography variant=\"h1\">Paper Patterns</Typography>\n        <Button variant=\"contained\" startIcon={<Plus />}>\n          Create Pattern\n        </Button>\n      </Box>\n\n      <Grid container spacing={3}>\n        {patterns.map((pattern) => (\n          <Grid item xs={12} sm={6} md={4} key={pattern.id}>\n            <Card>\n              <CardContent>\n                <Box sx={{ color: 'primary.main', mb: 2 }}>\n                  <FileSpreadsheet size={32} />\n                </Box>\n                <Typography variant=\"h6\" gutterBottom>\n                  {pattern.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Subject: {pattern.subject}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Duration: {pattern.duration}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                  Total Marks: {pattern.totalMarks}\n                </Typography>\n                <Button variant=\"outlined\" fullWidth>\n                  View Details\n                </Button>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      {patterns.length === 0 && (\n        <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\n          No patterns found. Create your first pattern to get started.\n        </Typography>\n      )}\n    </Box>\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}